generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://funding-manager:Qn*7aEM>sAau9tUnA{UE@51.159.25.67:63431/funding-manager"
}

model Teams {
  id                      String       @id @default(uuid())  @unique
  name                    String       @unique 
  roleName                String       @db.VarChar(255)   @unique
  email                   String       @db.VarChar(255)   @unique
  phone                   String?      @db.VarChar(255)                         
  postalCode              String?      @db.VarChar(255)  
  city                    String?      @db.VarChar(255)  
  country                 String?      @db.VarChar(255)  
  website                 String?      @db.VarChar(255)

  bankDetailsId           String?      @unique
  bankDetails             BankDetails? @relation(fields: [bankDetailsId], references: [id])
  organizations           Organization[]
  contacts                ContactPerson[]   // Updated: One-to-many relation
  createdAt               DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime    @updatedAt @db.Timestamptz(6)
}





model Manager {
  id    String  @id @default(uuid())  @unique
  email String  @unique                      
  name  String?                              
  roles String                               
  organizations Organization[] 
}

model Organization {
  id                      String      @id @default(uuid()) @unique 
  name                    String?      @db.VarChar(255)          
  address                 String?      @db.VarChar(255)          
  email                   String       @db.VarChar(255)   @unique                       
  phone                   String?      @db.VarChar(255)                         
  postalCode              String?      @db.VarChar(255)  
  city                    String?      @db.VarChar(255)  
  country                 String?      @db.VarChar(255)  
  website                 String?      @db.VarChar(255)
  taxID                   String?      @db.VarChar(255)
  isFilledByOrg           Boolean      @default(false)
  bankDetailsId           String?      @unique
  managers                Manager[]   
  contacts                ContactPerson[]   // Updated: One-to-many relation
  teamId                  String?     
  team                    Teams?              @relation(fields: [teamId], references: [id])   
  bankDetails             BankDetails?        @relation(fields: [bankDetailsId], references: [id])
  fundingRequests         FundingRequest[]                
  Files                   File[]                        
  createdAt               DateTime    @default(now()) @db.Timestamptz(6) 
  updatedAt               DateTime    @updatedAt @db.Timestamptz(6) 
}


model BankDetails {
  id              String     @id @default(uuid()) @unique       
  bankName        String     @db.VarChar(255)                  
  accountHolder   String     @db.VarChar(255)                  
  iban            String     @db.VarChar(255)     @unique                
  bic             String     @db.VarChar(255)                
  createdAt       DateTime @default(now()) @db.Timestamptz(6) 
  updatedAt       DateTime @updatedAt @db.Timestamptz(6) 
  organization    Organization? @relation
  teams           Teams? @relation 
}



enum FundingStatus {
  Pending
  UnderReview
  Approved
  Rejected
}
model FundingRequest {
  id                        String    @id @default(uuid()) @unique    
  organizationId            String                                
  organization              Organization @relation(fields: [organizationId], references: [id])
  description               String       @db.Text                   
  purpose                   String       @db.Text
  amountRequested           Decimal                                 
  amountAgreed              Decimal?                              
  refinancingConcept        String       @db.Text
  sustainability            String       @db.Text
  expectedCompletionDate    DateTime                               
  status                    FundingStatus @default(Pending)   
  submittedById             String           
  submittedBy               ContactPerson? @relation(fields: [submittedById], references: [id])
  createdAt                 DateTime @default(now()) @db.Timestamptz(6) 
  updatedAt                 DateTime @updatedAt @db.Timestamptz(6) 
  files                     File[]                               
}

model File {
  id          String    @id @default(uuid()) @unique 
  name        String?      @db.VarChar(255)  
  url         String
  type        String      @db.VarChar(255)                             
  createdBy   String      @db.VarChar(255)                         
  updatedBy   String      @db.VarChar(255)                         
  createdAt   DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime    @updatedAt @db.Timestamptz(6) 

  organizationId String?  @db.VarChar(255)  
  organization   Organization? @relation(fields: [organizationId], references: [id])  // One-to-Many relation
  fundingRequestId String?
  FundingRequest FundingRequest? @relation(fields: [fundingRequestId], references: [id])
}

enum ContactType {
  Organization
  Team
  Admin
}

model ContactPerson {
  id                      String      @id @default(uuid()) @unique 
  name                    String?      @db.VarChar(255)          
  address                 String?      @db.VarChar(255)          
  email                   String       @db.VarChar(255)  @unique         
  phone                   String?      @db.VarChar(255)          
  postalCode              String?      @db.VarChar(255)  
  city                    String?      @db.VarChar(255)  
  country                 String?      @db.VarChar(255)                           
  type                    ContactType @default(Organization)
  teamId                  String?
  team                    Teams?       @relation(fields: [teamId], references: [id])
  organizationId          String?     
  organization            Organization? @relation(fields: [organizationId], references: [id])                          
  fundingRequests         FundingRequest[]  
  createdAt               DateTime @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime @updatedAt @db.Timestamptz(6) 
}