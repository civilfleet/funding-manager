generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://funding-manager:Qn*7aEM>sAau9tUnA{UE@51.159.25.67:63431/funding-manager"
}

model Manager {
  id    String  @id @default(uuid())  @unique
  email String  @unique                      
  name  String?                              
  roles String                               
  organizations Organization[] 
}

model Organization {
  id                      String      @id @default(uuid()) @unique 
  name                    String?      @db.VarChar(255)          
  address                 String?      @db.VarChar(255)          
  contactPersonId         String?     @unique
  contactPerson           ContactPerson?        @relation(fields: [contactPersonId], references: [id])                          
  email                   String       @db.VarChar(255)                         
  phone                   String?      @db.VarChar(255)                         
  postalCode              String?      @db.VarChar(255)  
  city                    String?      @db.VarChar(255)  
  country                 String?      @db.VarChar(255)  
  website                 String?      @db.VarChar(255)
  taxID                   String?      @db.VarChar(255)

  bankDetailsId           String?    @unique
  Managers                Manager[]   

  bankDetails             BankDetails?        @relation(fields: [bankDetailsId], references: [id])
  fundingRequests         FundingRequest[]                
  taxExemptionCertificate File? @relation("OrganizationTaxExemptionCertificate") 
  articlesOfAssociation   File? @relation("OrganizationArticlesOfAssociation")    

  createdAt               DateTime    @default(now()) @db.Timestamptz(6) 
  updatedAt               DateTime    @updatedAt @db.Timestamptz(6) 
}


model BankDetails {
  id              String     @id @default(uuid()) @unique       
  bankName        String     @db.VarChar(255)                  
  accountHolder   String     @db.VarChar(255)                  
  iban            String     @db.VarChar(255)                  
  bic             String     @db.VarChar(255)                
  createdAt       DateTime @default(now()) @db.Timestamptz(6) 
  updatedAt       DateTime @updatedAt @db.Timestamptz(6) 
  organization    Organization? @relation
}



enum FundingStatus {
  Pending
  UnderReview
  Approved
  Rejected
}
model FundingRequest {
  id                        String    @id @default(uuid()) @unique    
  organizationId            String                                
  organization              Organization @relation(fields: [organizationId], references: [id])
  description               String                          
  purpose                   String      @db.VarChar(255)                            
  amountRequested           Decimal                                 
  amountAgreed              Decimal                              
  refinancingConcept        String       @db.VarChar(255)                           
  sustainability            String       @db.VarChar(255)                           
  expectedCompletionDate    DateTime                               
  status                    FundingStatus @default(Pending)       
  createdAt                 DateTime @default(now()) @db.Timestamptz(6) 
  updatedAt                 DateTime @updatedAt @db.Timestamptz(6) 
  files                     File[]                               
}

model File {
  id          String    @id @default(uuid()) @unique 
  content     String                             
  createdBy   String     @db.VarChar(255)                         
  updatedBy   String      @db.VarChar(255)                         
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6) 

  OrganizationTaxExemptionCertificate Organization? @relation("OrganizationTaxExemptionCertificate", fields: [organizationId], references: [id], map: "File_organizationId_fkey1")
  OrganizationArticlesOfAssociation     Organization? @relation("OrganizationArticlesOfAssociation", fields: [organizationId], references: [id], map: "File_organizationId_fkey2")
  
  organizationId String? @unique
  fundingRequestId String?
  FundingRequest FundingRequest? @relation(fields: [fundingRequestId], references: [id])
}

model ContactPerson{
  id          String    @id @default(uuid()) @unique 
  name                    String?      @db.VarChar(255)          
  address                 String?      @db.VarChar(255)          
  email                   String       @db.VarChar(255)          
  phone                   String?      @db.VarChar(255)          
  postalCode              String?      @db.VarChar(255)  
  city                    String?      @db.VarChar(255)  
  country                 String?      @db.VarChar(255)                           
  organization    Organization? @relation
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6) 


  
}